apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.example.jackfan.hellojniold"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    // Make the built apk include libs - begin
    sourceSets.main {
        jniLibs.srcDir 'src/main/libs'
        jni.srcDirs = [] //disable automatic ndk-build call
    }
    // Make the built apk include libs - end

    // Let gradle run ndk-build
    task taskNdkBuild(type: Exec, description: 'Compile JNI source via NDK') {
        workingDir file('src/main')
        commandLine getNdkBuild()
        //commandLine ndkBuild, 'NDK_DEBUG=1', '-C', file('src/main').absolutePath
    }
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn taskNdkBuild
    }
    task ndkBuildClean(type: Exec) {
        workingDir file('src/main')
        commandLine getNdkBuild(), 'clean'
    }
    clean.dependsOn 'ndkBuildClean'

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.1.1'
    testCompile 'junit:junit:4.12'
}

import org.apache.tools.ant.taskdefs.condition.Os
def getNdkBuild() {
    def ndkDir
    def lpfile = file('../local.properties');
    if (lpfile.exists()) {
        def Properties localProps = new Properties()
        localProps.load(new FileInputStream(lpfile))
        if (localProps['ndk.dir'] != null) {
            ndkDir = localProps['ndk.dir']
        }
    } else logger.info('local.properties does not exist')

    if (ndkDir == null) {
        if (System.env.ANDROID_NDK_HOME != null) {
            ndkDir = System.env.ANDROID_NDK_HOME
        } else if (System.env.ANDROID_NDK_PATH != null) {
            ndkDir = System.env.ANDROID_NDK_PATH
        }
    }

    if (ndkDir == null) {
        logger.error('ndk.dir is not set in local.properties')
        //commandLine 'echo Please see error msg above'
    }
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        return "$ndkDir\\ndk-build.cmd"
    } else {
        return "$ndkDir/ndk-build"
    }
}